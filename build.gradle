plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' //querydsl
}

group = 'project.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'



	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	//Parameter 확인할 수 있는 라이브러리
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	//oauth2라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {exclude group: "org.hamcrest", module: "hamcrest-core"
	}
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time'
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5'
	//썸네일 라이브러리
	compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.12'
	//querydsl
	implementation 'com.querydsl:querydsl-jpa'
}

test {
	useJUnitPlatform()
}
//querydsl
def querydslDir ="$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets{
	main.java.srcDir querydslDir
}
configurations{
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
